# code: language=ansible
---

# Check distribution and version before run tasks

- name: "Common | Always | Check distribution"
  ansible.builtin.fail:
    msg: "Unsupported distribution {{ dist_name }}"
  when:
    - dist_name not in ["alma", "centos", "debian", "oracle", "rocky", "ubuntu"]
  tags:
    - always

- name: "Common | Always | Check alma/centos/oracle/rocky linux versions"
  ansible.builtin.fail:
    msg: "Unsupported distribution version {{ dist_name }}: {{ dist_version }}"
  when:
    - dist_name in ["alma", "centos", "oracle", "rocky"]
    - dist_version not in ["8", "9"]
  tags:
    - always

- name: "Common | Always | Check Debian / Ubuntu codenames"
  ansible.builtin.fail:
    msg: "Unsupported distribution version {{ dist_name }}: {{ dist_codename }}"
  when:
    - dist_name in ["debian", "ubuntu"]
    - dist_codename not in ["buster", "bullseye", "bookworm", "focal", "jammy", "noble"]
  tags:
    - always

# Include distribution specified vars

- name: "Common | Always | Include distribution vars"
  ansible.builtin.include_vars: "{{ dist_name }}.yml"
  tags:
    - always

# Debug python

- name: "Common | Always | Debug python version"
  ansible.builtin.debug:
    msg: "Python version: {{ ansible_python_version }} | Python path {{ ansible_python_interpreter }}"
    verbosity: 1

# Install role packages dependencies

- name: "Common | Always | Install packages"
  ansible.builtin.include_tasks: "always/install/{{ dist_pkg_mgr }}.yml"
  when:
    - common_always_packages | is_ne_list
  tags:
    - always

- name: "Common | Always | Get services facts"
  ansible.builtin.service_facts:
  tags:
    - always
